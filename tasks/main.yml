- name: /win-phoronix/ check memory limit
  win_shell: "Get-Item WSMan:\\localhost\\Shell\\MaxMemoryPerShellMB"
  changed_when: false
  register: result

- name: /win-phoronix/ increase winrm memory limits
  win_shell: "Set-Item WSMan:\\localhost\\Shell\\MaxMemoryPerShellMB 3096"
  when: '"3096" not in result.stdout'

- name: /win-phoronix/ check for php install
  win_stat:
    path: "{{ ansible_env.SystemDrive }}\\PHP"
  register: php_info

- name: /win-phoronix/ remove stale php package
  win_chocolatey:
    name: php
    state: absent
  when: not php_info.stat.exists

- name: /win-phoronix/ install php
  win_chocolatey:
    name: php
    state: present
    params:  "/InstallDir:{{ ansible_env.SystemDrive }}\\PHP"

- name: /win-phoronix/ enable php openssl
  win_lineinfile:
    line: 'extension=openssl'
    path: "{{ ansible_env.SystemDrive }}\\PHP\\php.ini"
    regex: ';extension=openssl'

- name: /win-phoronix/ install cygwin
  win_chocolatey:
    name: cygwin
    state: present
    params:  "/InstallDir:{{ ansible_env.SystemDrive }}\\cygwin64"


- name: /win-phoronix/ fetch phoronix test suite
  win_get_url:
    dest: "{{ansible_env.TEMP}}\\phoronix-test-suite-{{phoronix_version}}.zip"
    url: "https://github.com/phoronix-test-suite/phoronix-test-suite/archive/v{{ phoronix_version }}.zip"

- name: /win-phoronix/ unzip phoronix
  win_unzip:
    dest: "{{ ansible_env.SystemDrive }}\\"
    src: "{{ ansible_env.TEMP }}\\phoronix-test-suite-{{phoronix_version}}.zip"
    creates: "{{ ansible_env.SystemDrive }}\\phoronix-test-suite"

- name: /win-phoronix/ move to version-independent path
  win_shell: \
    Move-Item
    -Path "{{ ansible_env.SystemDrive }}\\phoronix-test-suite-{{phoronix_version}}"
    -Destination "{{ ansible_env.SystemDrive }}\\phoronix-test-suite"
  args:
    creates: "{{ ansible_env.SystemDrive }}\\phoronix-test-suite"

- name: /win-phoronix/ check for phoronix config
  win_stat:
    path: "{{ ansible_env.USERPROFILE }}\\.phoronix-test-suite\\user-config.xml"
  register: phoronix_info

- name: /win-phoronix/ initialize phoronix
  win_shell: >
    Start-Process
    -FilePath {{ ansible_env.SystemDrive }}\\phoronix-test-suite\\phoronix-test-suite.bat
    -ArgumentList help; sleep 10
  failed_when: false
  when: not phoronix_info.stat.exists

- name: /win-phoronix/ copy config file
  win_copy:
    dest: "{{ ansible_env.USERPROFILE }}\\.phoronix-test-suite\\user-config.xml"
    src: user-config.xml

- name: /win-phoronix/ copy core file
  win_copy:
    dest: "{{ ansible_env.USERPROFILE }}\\.phoronix-test-suite\\core.pt2so"
    src: core.pt2so

- name: /win-phoronix/ create suite directory
  win_file:
    path: "{{ ansible_env.USERPROFILE }}\\.phoronix-test-suite\\test-suites\\local\\suite"
    state: directory

- name: /win-phoronix/ test phoronix
  win_shell: "{{ ansible_env.SystemDrive }}\\phoronix-test-suite\\phoronix-test-suite.bat help"

- name: /win-phoronix/ install virtio drivers
  win_chocolatey:
    name: virtio-drivers
    state: present

- name: /win-phoronix/ open ssh server port
  win_firewall_rule:
    name: Win32-OpenSSH inbound
    protocol: tcp
    localport: 22
    direction: in
    action: allow
    state: present
    enabled: true
    profiles: public,private

- name: /win-phoronix/ start sshd
  win_service:
    name: sshd
    state: started
    start_mode: auto
    force: true
    force_dependent_services: true

- name: /win-phoronix/ copy authorized_keys
  win_copy:
    dest: '{{ ansible_env.ALLUSERSPROFILE}}/ssh/administrators_authorized_keys'
    src: phoronix.pub

- name: /win-phoronix/ fix authorized_keys permissions
  script: set-authorized-keys-acl.ps1

- name: /win-phoronix/ use powershell for ssh
  win_regedit:
    path: HKLM:\SOFTWARE\OpenSSH
    name: DefaultShell
    data: 'C:\\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe'
    type: string
